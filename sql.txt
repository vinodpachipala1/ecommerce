CREATE TYPE user_role AS ENUM ('Customer', 'Seller');

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(150) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    role user_role NOT NULL,
    store_name VARCHAR(150),
    business_address TEXT,
    phone VARCHAR(20),
    created_at TIMESTAMP DEFAULT NOW()
);

CREATE TABLE products (
    id SERIAL PRIMARY KEY,
    seller_id INT REFERENCES users(id) ON DELETE CASCADE,
    category VARCHAR NOT NULL,
    pname VARCHAR NOT NULL,
    price NUMERIC NOT NULL,
    brand VARCHAR NOT NULL,
    stock INT NOT NULL,
    imageurl TEXT,
    image BYTEA,
    description TEXT NOT NULL,
    warranty_guarantee TEXT NOT NULL,
    weight NUMERIC NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    is_deleted BOOLEAN DEFAULT FALSE,
    CONSTRAINT unique_seller_product UNIQUE (seller_id, pname, category, brand)
);


CREATE TABLE product_tags (
    id SERIAL PRIMARY KEY,
    product_id INT REFERENCES products(id) ON DELETE CASCADE,
    tag VARCHAR NOT NULL
);

CREATE TABLE product_sections (
    id SERIAL PRIMARY KEY,
    product_id INT REFERENCES products(id) ON DELETE CASCADE,
    title VARCHAR,
    content TEXT
);

CREATE TABLE cart (
    id SERIAL PRIMARY KEY,
    customer_id INT REFERENCES users(id) ON DELETE CASCADE,
    product_id INT REFERENCES products(id) ON DELETE CASCADE,
    quantity INT NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    CONSTRAINT unique_customer_product UNIQUE (customer_id, product_id)
);

CREATE TABLE address (
    id SERIAL PRIMARY KEY,
    customer_id INT REFERENCES users(id),
    name VARCHAR(100),
    phone VARCHAR(15),
    local_address TEXT,
    pincode VARCHAR(10),
    city VARCHAR(100),
    district VARCHAR(100),
    state VARCHAR(100),
    created_at TIMESTAMP DEFAULT NOW()
);

CREATE TABLE orders (
    id SERIAL PRIMARY KEY,
    order_group_id VARCHAR(255) NOT NULL, -- For grouping multiple items in one order
    customer_id INT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    product_id INT REFERENCES products(id),
    quantity INT NOT NULL,
    price NUMERIC NOT NULL,
    address JSONB NOT NULL,
    shipping NUMERIC NOT NULL,
    payment_method VARCHAR(20) NOT NULL,
    payment_status VARCHAR(20) DEFAULT 'Pending',
    payment_info VARCHAR(50),
    seller_id INT REFERENCES users(id),
    status VARCHAR(20) DEFAULT 'Processing',
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

CREATE TABLE product_inventory (
    id SERIAL PRIMARY KEY,
    product_id INT REFERENCES products(id) UNIQUE,
    added_quantity INT DEFAULT 0,    -- total stock added by seller
    sold_quantity INT DEFAULT 0,     -- total sold
    updated_at TIMESTAMP DEFAULT NOW()
);
